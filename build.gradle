plugins {
	id "java"
	id "maven"
//  id "eclipse"
//  id "idea"
	id 'pl.allegro.tech.build.axion-release' version '1.4.0'
}

scmVersion {
	tag {
		prefix = 'MonkeySheet'
	}
}

project.version = scmVersion.version
def fullversion = "git describe --always --dirty".execute().text.trim()
println("version : '${project.version}/${fullversion}'")

ext {
	jvm = org.gradle.internal.jvm.Jvm.current()
	javaVersion = JavaVersion.current()
	isCiServer = System.getenv("TRAVIS") || System.getenv().containsKey("TEAMCITY_VERSION") || hasProperty('CI')
	isWindows = org.gradle.internal.os.OperatingSystem.current().windows
}

//name = the directory name
group = "com.pesegato"

repositories {
  mavenLocal()
  jcenter()
  maven { url "https://jitpack.io" }
}


def jme3 = ["v" : '[3.1,)', "g": "org.jmonkeyengine"]
def pesegatoloader="com.pesegato"
def pesegatoversion="latest.integration"
if (isCiServer){
	pesegatoloader="com.github.Pesegato"
	pesegatoversion="-SNAPSHOT"
}

dependencies {
  // jme
  compile "${jme3.g}:jme3-core:${jme3.v}"
	compile 'org.slf4j:slf4j-api:1.7.13'
	compile 'com.google.guava:guava:19.0'
	compile "${pesegatoloader}:GoldMonkey:${pesegatoversion}"
	runtime 'ch.qos.logback:logback-classic:1.1.2'
	runtime "${jme3.g}:jme3-desktop:${jme3.v}"
  runtime "${jme3.g}:jme3-lwjgl:${jme3.v}"

  //utils

  //assets

  //test
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava.doLast {
	def buildDate = new Date().format('yyyy-MM-dd HHmm')
	println "Writing ${scmVersion.tag.prefix}.build.date: " + buildDate
	new File(destinationDir, "${scmVersion.tag.prefix}.build.date").text = buildDate
	new File(destinationDir, "${scmVersion.tag.prefix}.build.version").text = "${fullversion}"
}


task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}
