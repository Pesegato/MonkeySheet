plugins {
	id 'java-library'
	id 'maven-publish'
	id "idea"
	id 'signing'
	id 'com.palantir.git-version' version '3.0.0'
}

group 'io.github.pesegato'
version gitVersion()

println("version : '${version}'")

ext {
		jvm = org.gradle.internal.jvm.Jvm.current()
		javaVersion = JavaVersion.current()
		isCiServer = System.getenv("TRAVIS") || System.getenv().containsKey("TEAMCITY_VERSION") || hasProperty('CI') || System.getenv("JITPACK")
		isWindows = org.gradle.internal.os.OperatingSystem.current().windows
}

repositories {
		mavenCentral()
}


def jme3 = ["v": '3.4.0-stable', "g": "org.jmonkeyengine"]
def pesegato = ["g": "com.pesegato", "v": "latest.integration"]
if (isCiServer) {
		pesegato.g = "com.github.Pesegato"
		pesegato.v = "-SNAPSHOT"
}

dependencies {
		// jme
		implementation "${jme3.g}:jme3-core:${jme3.v}"
		implementation 'org.dyn4j:dyn4j:4.2.0'
		implementation 'org.slf4j:slf4j-api:1.7.13'
		implementation 'com.google.guava:guava:19.0'
		implementation 'com.google.code.gson:gson:2.7'
		implementation 'io.github.pesegato:GoldMonkey:0.7.4'
		runtimeOnly 'ch.qos.logback:logback-classic:1.2.3'
		runtimeOnly "${jme3.g}:jme3-lwjgl3:${jme3.v}"

		//utils

		//assets

		//test
}

signing {
	sign publishing.publications
}

publishing {
	publications {
		mavenJava(org.gradle.api.publish.maven.MavenPublication) {
			from components.java
			pom {
				name = 'MonkeySheet'
				description = 'Spritesheet library for jMonkeyEngine'
				url = 'https://github.com/Pesegato/MonkeySheet/'
				inceptionYear = '2016'
				licenses {
					license {
						name = 'BSD 3-Clause License'
						url = 'https://github.com/Pesegato/MonkeySheet/blob/main/LICENSE'
					}
				}
				developers {
					developer {
						id = 'pesegato'
						name = 'Pesegato Ameiurus Melas'
						email = 'pesegato@outlook.com'
					}
				}
				scm {
					connection = 'scm:git:git://github.com/pesegato/monkeysheet.git'
					developerConnection = 'scm:git:ssh://git@github.com/pesegato/monkeysheet.git'
					url = 'https://github.com/Pesegato/MonkeySheet/'
				}
			}
		}
	}
	repositories {
		maven {
			url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
			credentials {
				username = ossrhUsername
				password = ossrhPassword
			}
		}
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
	withJavadocJar()
	withSourcesJar()
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

compileJava.doLast {
		def buildDate = new Date().format('yyyy-MM-dd HHmm')
		println "Writing ${rootProject.name}.build.date: " + buildDate
		destinationDirectory.file("${rootProject.name}.build.date").get().asFile.text = buildDate
		destinationDirectory.file("${rootProject.name}.build.version").get().asFile.text = "${version}"
}
